from django.contrib.gis.db import models

class Ward(models.Model):
    geometry = models.PolygonField(blank=True, null=True)
    ward_id = models.IntegerField()
    ward_name = models.CharField(max_length=255)
    tot_nm_hh = models.IntegerField(blank=True, null=True)
    tot_pop = models.IntegerField(blank=True, null=True)
    m_pop = models.IntegerField(blank=True, null=True)    
    f_pop = models.IntegerField(blank=True, null=True)
    tot_l6 = models.IntegerField(blank=True, null=True)
    tot_sc = models.IntegerField(blank=True, null=True)
    m_sc = models.IntegerField(blank=True, null=True)
    f_sc = models.IntegerField(blank=True, null=True)
    tot_st = models.IntegerField(blank=True, null=True)
    m_st = models.IntegerField(blank=True, null=True)
    f_st = models.IntegerField(blank=True, null=True)
    tot_lit = models.IntegerField(blank=True, null=True)
    m_lit = models.IntegerField(blank=True, null=True)
    f_lit = models.IntegerField(blank=True, null=True)
    tot_illt = models.IntegerField(blank=True, null=True)
    f_illt = models.IntegerField(blank=True, null=True)
    tot_w = models.IntegerField(blank=True, null=True)
    m_w = models.IntegerField(blank=True, null=True)
    f_w = models.IntegerField(blank=True, null=True)
    tot_mnw = models.IntegerField(blank=True, null=True)
    m_mnw = models.IntegerField(blank=True, null=True)
    f_mnw = models.IntegerField(blank=True, null=True)
    tot_cult = models.IntegerField(blank=True, null=True)
    m_cult = models.IntegerField(blank=True, null=True)
    f_cult = models.IntegerField(blank=True, null=True)
    tot_aglb = models.IntegerField(blank=True, null=True)
    m_aglb = models.IntegerField(blank=True, null=True)
    f_aglb = models.IntegerField(blank=True, null=True)
    tot_mfhh = models.IntegerField(blank=True, null=True)
    m_mfhh = models.IntegerField(blank=True, null=True)
    f_mfhh = models.IntegerField(blank=True, null=True)
    tot_oth_w = models.IntegerField(blank=True, null=True)
    m_oth_w = models.IntegerField(blank=True, null=True)
    f_oth_w = models.IntegerField(blank=True, null=True)
    tot_mrw = models.IntegerField(blank=True, null=True)
    m_mrw = models.IntegerField(blank=True, null=True)
    f_mrw = models.IntegerField(blank=True, null=True)
    t_mrg_cult = models.IntegerField(blank=True, null=True)
    m_mrg_cult = models.IntegerField(blank=True, null=True)
    f_mrg_cult = models.IntegerField(blank=True, null=True)
    t_mrg_aglb = models.IntegerField(blank=True, null=True)
    m_mrg_aglb = models.IntegerField(blank=True, null=True)
    f_mrg_aglb = models.IntegerField(blank=True, null=True)
    t_mrg_hh = models.IntegerField(blank=True, null=True)
    m_mrg_hh = models.IntegerField(blank=True, null=True)
    f_mrg_hh = models.IntegerField(blank=True, null=True)
    t_mrg_oth = models.IntegerField(blank=True, null=True)
    m_mrg_oth = models.IntegerField(blank=True, null=True)
    f_mrg_oth = models.IntegerField(blank=True, null=True)
    tot_nnw = models.IntegerField(blank=True, null=True)
    m_nnw = models.IntegerField(blank=True, null=True)
    f_nnw = models.IntegerField(blank=True, null=True)
    objectid = models.IntegerField(blank=True, null=True)
    objects = models.GeoManager()

    def __unicode__(self):
        return self.ward_name

    class Meta:
        verbose_name = 'Greater Mumbai Administrative Ward'
        verbose_name_plural = 'Greater Mumbai Administrative Wards'


